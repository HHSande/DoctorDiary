{"ast":null,"code":"import _classCallCheck from \"/Users/HansHenrikSande/Documents/DoctorDiary/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/HansHenrikSande/Documents/DoctorDiary/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/HansHenrikSande/Documents/DoctorDiary/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/HansHenrikSande/Documents/DoctorDiary/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/HansHenrikSande/Documents/DoctorDiary/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nvar Test =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Test, _React$PureComponent);\n\n  function Test(props) {\n    var _this;\n\n    _classCallCheck(this, Test);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Test).call(this, props)); // STEP 1: create a container <div>\n\n    _this.containerEl = document.createElement('div');\n    _this.externalWindow = null;\n    return _this;\n  }\n\n  _createClass(Test, [{\n    key: \"render\",\n    value: function render() {\n      // STEP 2: append props.children to the container <div> that isn't mounted anywhere yet\n      console.log(this.containerEl);\n      console.log(\"Did render\");\n      return ReactDOM.createPortal(this.props.children, this.containerEl);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // STEP 3: open a new browser window and store a reference to it\n      this.externalWindow = window.open('', '', 'width=600,height=400,left=200,top=200'); // STEP 4: append the container <div> (that has props.children appended to it) to the body of the new window\n\n      this.externalWindow.document.body.appendChild(this.containerEl);\n      console.log(\"Did mount\");\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // STEP 5: This will fire when this.state.openWindow in the parent component becomes false\n      // So we tidy up by closing the window\n      this.externalWindow.close();\n    }\n  }]);\n\n  return Test;\n}(React.PureComponent);\n\nexport default Test;","map":{"version":3,"sources":["/Users/HansHenrikSande/Documents/DoctorDiary/my-app/src/Test.js"],"names":["React","Component","ReactDOM","Test","props","containerEl","document","createElement","externalWindow","console","log","createPortal","children","window","open","body","appendChild","close","PureComponent"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;;IAEMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN,GADiB,CAEjB;;AACA,UAAKC,WAAL,GAAmBC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAnB;AACA,UAAKC,cAAL,GAAsB,IAAtB;AAJiB;AAKlB;;;;6BAEQ;AACP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,WAAjB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,aAAOR,QAAQ,CAACS,YAAT,CAAsB,KAAKP,KAAL,CAAWQ,QAAjC,EAA2C,KAAKP,WAAhD,CAAP;AACD;;;wCAEmB;AAClB;AACA,WAAKG,cAAL,GAAsBK,MAAM,CAACC,IAAP,CAAY,EAAZ,EAAgB,EAAhB,EAAoB,uCAApB,CAAtB,CAFkB,CAIlB;;AACA,WAAKN,cAAL,CAAoBF,QAApB,CAA6BS,IAA7B,CAAkCC,WAAlC,CAA8C,KAAKX,WAAnD;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;;2CAEsB;AACrB;AACA;AAEA,WAAKF,cAAL,CAAoBS,KAApB;AACD;;;;EA7BgBjB,KAAK,CAACkB,a;;AAgCzB,eAAef,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Test extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    // STEP 1: create a container <div>\n    this.containerEl = document.createElement('div');\n    this.externalWindow = null;\n  }\n  \n  render() {\n    // STEP 2: append props.children to the container <div> that isn't mounted anywhere yet\n    console.log(this.containerEl);\n    console.log(\"Did render\");\n    return ReactDOM.createPortal(this.props.children, this.containerEl);\n  }\n\n  componentDidMount() {\n    // STEP 3: open a new browser window and store a reference to it\n    this.externalWindow = window.open('', '', 'width=600,height=400,left=200,top=200');\n\n    // STEP 4: append the container <div> (that has props.children appended to it) to the body of the new window\n    this.externalWindow.document.body.appendChild(this.containerEl);\n    console.log(\"Did mount\");\n  }\n\n  componentWillUnmount() {\n    // STEP 5: This will fire when this.state.openWindow in the parent component becomes false\n    // So we tidy up by closing the window\n\n    this.externalWindow.close();\n  }\n}\n\nexport default Test;"]},"metadata":{},"sourceType":"module"}