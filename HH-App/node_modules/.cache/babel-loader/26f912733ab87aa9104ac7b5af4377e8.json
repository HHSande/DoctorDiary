{"ast":null,"code":"// API CALLS\nvar enc = \"Basic \" + window.btoa(\"BjarneB\" + \":\" + \"District1-\");\nvar dhis2 = {\n  baseUrl: 'https://course.dhis2.org/dhis/api/29/'\n};\nvar headers = new Headers({\n  'Content-type': 'application/json',\n  Authorization: enc,\n  Accept: 'application/json'\n});\n\nvar getSelectedData = function getSelectedData(spec) {\n  // for random requests\n  return fetch(\"\".concat(dhis2.baseUrl).concat(spec, \".json?ou=vwvDblM3MNX\"), {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar getTrackedEntityInstances = function getTrackedEntityInstances(orgUnit) {\n  return fetch(\"\".concat(dhis2.baseUrl, \"trackedEntityInstances.json?ou=\").concat(orgUnit, \"&\\n    ?filter=trackedEntityTypes:eq:nEenWmSyUEp\"), {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar getMetaData = function getMetaData() {\n  // for doctors, orgUnits\n  return fetch(\"\".concat(dhis2.baseUrl, \"programs/r6qGL4AmFV4/metadata.json\"), {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar getReports = function getReports() {\n  // pass orgUnit\n  console.log(\"KjÃ¸rer\");\n  return fetch(\"\".concat(dhis2.baseUrl, \"events.json?orgUnit=vwvDblM3MNX\"), {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar enrollments = function enrollments(spec) {\n  // pass orgUnit\n  fetch(\"\".concat(dhis2.baseUrl).concat(spec, \".json?ou=u3rHGQGLLP7\"), {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar getAttributes = function getAttributes(id) {\n  return fetch(\"\".concat(dhis2.baseUrl, \"/trackedEntityAttributes/\").concat(id), {\n    // GET trackedEntityAttributes\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar getDataElement = function getDataElement(id) {\n  return fetch(\"\".concat(dhis2.baseUrl, \"dataElements/\").concat(id), {\n    //  Search for data element\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar postEvent = function postEvent(event) {\n  return fetch(\"\".concat(dhis2.baseUrl, \"events/\"), {\n    method: 'POST',\n    credentials: 'include',\n    mode: 'cors',\n    headers: headers,\n    body: JSON.stringify(event)\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar getEntryFromDoctor = function getEntryFromDoctor(eventID) {\n  return fetch(\"\".concat(dhis2.baseUrl, \"events/\").concat(eventID), {\n    method: 'GET',\n    credentials: 'include',\n    mode: 'cors',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar getEvent = function getEvent(event) {\n  return fetch(\"\".concat(dhis2.baseUrl, \"events?orgUnit=DUDHgE5DECu\"), {\n    //  Search for data element\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nexport default {\n  getSelectedData: getSelectedData,\n  getDataElement: getDataElement,\n  getMetaData: getMetaData,\n  getReports: getReports,\n  getEvent: getEvent,\n  postEvent: postEvent,\n  getEntryFromDoctor: getEntryFromDoctor,\n  getTrackedEntityInstances: getTrackedEntityInstances,\n  dhis2: dhis2,\n  headers: headers\n}; // -K","map":{"version":3,"sources":["/Users/kim/Documents/UiO/MASTER/IN5320/doctors_diary/DoctorDiary/HH-App/src/api.js"],"names":["enc","window","btoa","dhis2","baseUrl","headers","Headers","Authorization","Accept","getSelectedData","spec","fetch","method","mode","credentials","catch","error","then","response","json","getTrackedEntityInstances","orgUnit","getMetaData","getReports","console","log","enrollments","getAttributes","id","getDataElement","postEvent","event","body","JSON","stringify","getEntryFromDoctor","eventID","getEvent"],"mappings":"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","sourcesContent":["// API CALLS\n\n\nvar enc = \"Basic \" + window.btoa(\"BjarneB\"+\":\"+\"District1-\");\n\nconst dhis2 = {\n  baseUrl: 'https://course.dhis2.org/dhis/api/29/',\n};\n\n\nconst headers = new Headers({\n  'Content-type' : 'application/json',\n  Authorization: enc,\n  Accept: 'application/json',\n});\n\n\nconst getSelectedData = spec => { // for random requests\n\n  return fetch(`${dhis2.baseUrl}${spec}.json?ou=vwvDblM3MNX`, {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n};\n\n\nconst getTrackedEntityInstances = orgUnit => {\n\n  return fetch(`${dhis2.baseUrl}trackedEntityInstances.json?ou=${orgUnit}&\n    ?filter=trackedEntityTypes:eq:nEenWmSyUEp`, {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n};\n\n\nconst getMetaData = () => { // for doctors, orgUnits\n\n  return fetch(`${dhis2.baseUrl}programs/r6qGL4AmFV4/metadata.json`, {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n};\n\n\nconst getReports = () => { // pass orgUnit\n\n  console.log(\"KjÃ¸rer\")\n  return fetch(`${dhis2.baseUrl}events.json?orgUnit=vwvDblM3MNX`, {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n};\n\n\nconst enrollments = spec => { // pass orgUnit\n  fetch(`${dhis2.baseUrl}${spec}.json?ou=u3rHGQGLLP7`, {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n};\n\n\nconst getAttributes = id => {\n\n  return fetch(`${dhis2.baseUrl}/trackedEntityAttributes/${id}`, {  // GET trackedEntityAttributes\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n};\n\n\nconst getDataElement = id => {\n\n  return fetch(`${dhis2.baseUrl}dataElements/${id}`, {  //  Search for data element\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n}\n\nconst postEvent = event => {\n  return fetch(`${dhis2.baseUrl}events/`, {\n    method: 'POST',\n    credentials: 'include',\n    mode: 'cors',\n    headers,\n    body: JSON.stringify(event),\n  })\n  .catch(error => error)\n  .then(response => response.json());\n};\n\nconst getEntryFromDoctor = eventID => {\n  return fetch(`${dhis2.baseUrl}events/${eventID}`, {\n    method: 'GET',\n    credentials: 'include',\n    mode: 'cors',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n}\n\nconst getEvent = event => {\n  return fetch(`${dhis2.baseUrl}events?orgUnit=DUDHgE5DECu`, {  //  Search for data element\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n}\n\n\nexport default {\n  getSelectedData,\n  getDataElement,\n  getMetaData,\n  getReports,\n  getEvent,\n  postEvent,\n  getEntryFromDoctor,\n  getTrackedEntityInstances,\n  dhis2,\n  headers,\n};\n\n\n// -K\n"]},"metadata":{},"sourceType":"module"}