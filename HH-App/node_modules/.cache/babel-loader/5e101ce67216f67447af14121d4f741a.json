{"ast":null,"code":"// Hardcoded logins, change as needed\nvar enc = \"Basic \" + window.btoa(\"CasperL\" + \":\" + \"District1-\"); // DOCTOR\n//var enc = \"Basic \" + window.btoa(\"BjarneB\"+\":\"+\"District1-\"); // DHO\n//var enc = \"Basic \" + window.btoa(\"admin\"+\":\"+\"district\"); //  ADMIN\n\nvar dhis2 = {\n  baseUrl: 'https://course.dhis2.org/dhis/api/30/'\n};\nvar headers = new Headers({\n  'Content-type': 'application/json',\n  Authorization: enc,\n  Accept: 'application/json'\n});\nvar headersForMe = new Headers({\n  // brukes for api/me, fordi Content-Type ikke funke for det\n  Authorization: enc,\n  Accept: 'application/json'\n});\n\nvar getTrackedEntityInstance = function getTrackedEntityInstance(orgUnit, username) {\n  return fetch(\"\".concat(dhis2.baseUrl, \"trackedEntityInstances?ou=\").concat(orgUnit, \"&program=r6qGL4AmFV4&?filter=enrollments.storedBy:eq:\").concat(username, \"&fields=*\"), {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar getMe = function getMe() {\n  var headers = headersForMe;\n  return fetch(\"\".concat(dhis2.baseUrl, \"me\"), {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar getInstanceAndEnrollment = function getInstanceAndEnrollment(hospital) {\n  return fetch(\"\".concat(dhis2.baseUrl, \"events?orgUnit=\").concat(hospital), {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar getReports = function getReports() {\n  return fetch(\"\".concat(dhis2.baseUrl, \"events.json?program=r6qGL4AmFV4&paging=false\"), {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar postEvent = function postEvent(event) {\n  return fetch(\"\".concat(dhis2.baseUrl, \"events/\"), {\n    method: 'POST',\n    credentials: 'include',\n    mode: 'cors',\n    headers: headers,\n    body: JSON.stringify(event)\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar getEntryFromDoctor = function getEntryFromDoctor(eventID) {\n  return fetch(\"\".concat(dhis2.baseUrl, \"events/\").concat(eventID), {\n    method: 'GET',\n    credentials: 'include',\n    mode: 'cors',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar getEvent = function getEvent(event) {\n  return fetch(\"\".concat(dhis2.baseUrl, \"events?program=r6qGL4AmFV4\"), {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nexport default {\n  getReports: getReports,\n  getEvent: getEvent,\n  postEvent: postEvent,\n  getEntryFromDoctor: getEntryFromDoctor,\n  dhis2: dhis2,\n  headers: headers,\n  getMe: getMe,\n  getInstanceAndEnrollment: getInstanceAndEnrollment,\n  getTrackedEntityInstance: getTrackedEntityInstance\n}; // -K","map":{"version":3,"sources":["/Users/walidhaidari/Documents/IN5320/DoctorDiary/HH-App/src/api.js"],"names":["enc","window","btoa","dhis2","baseUrl","headers","Headers","Authorization","Accept","headersForMe","getTrackedEntityInstance","orgUnit","username","fetch","method","mode","credentials","catch","error","then","response","json","getMe","getInstanceAndEnrollment","hospital","getReports","postEvent","event","body","JSON","stringify","getEntryFromDoctor","eventID","getEvent"],"mappings":"AAEA;AAEA,IAAIA,GAAG,GAAG,WAAWC,MAAM,CAACC,IAAP,CAAY,YAAU,GAAV,GAAc,YAA1B,CAArB,C,CAA8D;AAC9D;AACA;;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,OAAO,EAAE;AADG,CAAd;AAKA,IAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY;AAC1B,kBAAiB,kBADS;AAE1BC,EAAAA,aAAa,EAAEP,GAFW;AAG1BQ,EAAAA,MAAM,EAAE;AAHkB,CAAZ,CAAhB;AAMA,IAAMC,YAAY,GAAG,IAAIH,OAAJ,CAAY;AAAG;AAClCC,EAAAA,aAAa,EAAEP,GADgB;AAE/BQ,EAAAA,MAAM,EAAE;AAFuB,CAAZ,CAArB;;AAKA,IAAME,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,OAAD,EAAUC,QAAV,EAAuB;AACtD,SAAOC,KAAK,WAAIV,KAAK,CAACC,OAAV,uCAA8CO,OAA9C,kEAA6GC,QAA7G,gBAAkI;AAC5IE,IAAAA,MAAM,EAAE,KADoI;AAE5IC,IAAAA,IAAI,EAAE,MAFsI;AAG5IC,IAAAA,WAAW,EAAE,SAH+H;AAI5IX,IAAAA,OAAO,EAAPA;AAJ4I,GAAlI,CAAL,CAMNY,KANM,CAMA,UAAAC,KAAK;AAAA,WAAIA,KAAJ;AAAA,GANL,EAONC,IAPM,CAOD,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GAPP,CAAP;AAQD,CATD;;AAWA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAElB,MAAKjB,OAAO,GAAII,YAAhB;AAEA,SAAOI,KAAK,WAAIV,KAAK,CAACC,OAAV,SAAuB;AACjCU,IAAAA,MAAM,EAAE,KADyB;AAEjCC,IAAAA,IAAI,EAAE,MAF2B;AAGjCC,IAAAA,WAAW,EAAE,SAHoB;AAIjCX,IAAAA,OAAO,EAAPA;AAJiC,GAAvB,CAAL,CAMNY,KANM,CAMA,UAAAC,KAAK;AAAA,WAAIA,KAAJ;AAAA,GANL,EAONC,IAPM,CAOD,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GAPP,CAAP;AAQD,CAZD;;AAcA,IAAME,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAAC,QAAQ,EAAI;AAE3C,SAAOX,KAAK,WAAIV,KAAK,CAACC,OAAV,4BAAmCoB,QAAnC,GAA+C;AACzDV,IAAAA,MAAM,EAAE,KADiD;AAEzDC,IAAAA,IAAI,EAAE,MAFmD;AAGzDC,IAAAA,WAAW,EAAE,SAH4C;AAIzDX,IAAAA,OAAO,EAAPA;AAJyD,GAA/C,CAAL,CAMNY,KANM,CAMA,UAAAC,KAAK;AAAA,WAAIA,KAAJ;AAAA,GANL,EAONC,IAPM,CAOD,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GAPP,CAAP;AAQD,CAVD;;AAaA,IAAMI,UAAU,GAAG,SAAbA,UAAa,GAAM;AAEvB,SAAOZ,KAAK,WAAIV,KAAK,CAACC,OAAV,mDAAiE;AAC3EU,IAAAA,MAAM,EAAE,KADmE;AAE3EC,IAAAA,IAAI,EAAE,MAFqE;AAG3EC,IAAAA,WAAW,EAAE,SAH8D;AAI3EX,IAAAA,OAAO,EAAPA;AAJ2E,GAAjE,CAAL,CAMNY,KANM,CAMA,UAAAC,KAAK;AAAA,WAAIA,KAAJ;AAAA,GANL,EAONC,IAPM,CAOD,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GAPP,CAAP;AASD,CAXD;;AAcA,IAAMK,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AAEzB,SAAOd,KAAK,WAAIV,KAAK,CAACC,OAAV,cAA4B;AACtCU,IAAAA,MAAM,EAAE,MAD8B;AAEtCE,IAAAA,WAAW,EAAE,SAFyB;AAGtCD,IAAAA,IAAI,EAAE,MAHgC;AAItCV,IAAAA,OAAO,EAAPA,OAJsC;AAKtCuB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,KAAf;AALgC,GAA5B,CAAL,CAONV,KAPM,CAOA,UAAAC,KAAK;AAAA,WAAIA,KAAJ;AAAA,GAPL,EAQNC,IARM,CAQD,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GARP,CAAP;AASD,CAXD;;AAcA,IAAMU,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,OAAO,EAAI;AAEpC,SAAOnB,KAAK,WAAIV,KAAK,CAACC,OAAV,oBAA2B4B,OAA3B,GAAsC;AAChDlB,IAAAA,MAAM,EAAE,KADwC;AAEhDE,IAAAA,WAAW,EAAE,SAFmC;AAGhDD,IAAAA,IAAI,EAAE,MAH0C;AAIhDV,IAAAA,OAAO,EAAPA;AAJgD,GAAtC,CAAL,CAMNY,KANM,CAMA,UAAAC,KAAK;AAAA,WAAIA,KAAJ;AAAA,GANL,EAONC,IAPM,CAOD,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GAPP,CAAP;AAQD,CAVD;;AAYA,IAAMY,QAAQ,GAAG,SAAXA,QAAW,CAAAN,KAAK,EAAI;AAExB,SAAOd,KAAK,WAAIV,KAAK,CAACC,OAAV,iCAA+C;AACzDU,IAAAA,MAAM,EAAE,KADiD;AAEzDC,IAAAA,IAAI,EAAE,MAFmD;AAGzDC,IAAAA,WAAW,EAAE,SAH4C;AAIzDX,IAAAA,OAAO,EAAPA;AAJyD,GAA/C,CAAL,CAMNY,KANM,CAMA,UAAAC,KAAK;AAAA,WAAIA,KAAJ;AAAA,GANL,EAONC,IAPM,CAOD,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GAPP,CAAP;AAQD,CAVD;;AAaA,eAAe;AACbI,EAAAA,UAAU,EAAVA,UADa;AAEbQ,EAAAA,QAAQ,EAARA,QAFa;AAGbP,EAAAA,SAAS,EAATA,SAHa;AAIbK,EAAAA,kBAAkB,EAAlBA,kBAJa;AAKb5B,EAAAA,KAAK,EAALA,KALa;AAMbE,EAAAA,OAAO,EAAPA,OANa;AAObiB,EAAAA,KAAK,EAALA,KAPa;AAQbC,EAAAA,wBAAwB,EAAxBA,wBARa;AASbb,EAAAA,wBAAwB,EAAxBA;AATa,CAAf,C,CAaA","sourcesContent":["\n\n// Hardcoded logins, change as needed\n\nvar enc = \"Basic \" + window.btoa(\"CasperL\"+\":\"+\"District1-\"); // DOCTOR\n//var enc = \"Basic \" + window.btoa(\"BjarneB\"+\":\"+\"District1-\"); // DHO\n//var enc = \"Basic \" + window.btoa(\"admin\"+\":\"+\"district\"); //  ADMIN\n\nconst dhis2 = {\n  baseUrl: 'https://course.dhis2.org/dhis/api/30/',\n};\n\n\nconst headers = new Headers({\n  'Content-type' : 'application/json',\n  Authorization: enc,\n  Accept: 'application/json',\n});\n\nconst headersForMe = new Headers({  // brukes for api/me, fordi Content-Type ikke funke for det\n  Authorization: enc,\n  Accept: 'application/json',\n});\n\nconst getTrackedEntityInstance = (orgUnit, username) => {\n  return fetch(`${dhis2.baseUrl}trackedEntityInstances?ou=${orgUnit}&program=r6qGL4AmFV4&?filter=enrollments.storedBy:eq:${username}&fields=*`, {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n}\n\nconst getMe = () => {\n\n  var  headers =  headersForMe;\n\n  return fetch(`${dhis2.baseUrl}me`, {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n};\n\nconst getInstanceAndEnrollment = hospital => {\n\n  return fetch(`${dhis2.baseUrl}events?orgUnit=${hospital}`, {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n};\n\n\nconst getReports = () => {\n\n  return fetch(`${dhis2.baseUrl}events.json?program=r6qGL4AmFV4&paging=false`, {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n\n};\n\n\nconst postEvent = event => {\n\n  return fetch(`${dhis2.baseUrl}events/`, {\n    method: 'POST',\n    credentials: 'include',\n    mode: 'cors',\n    headers,\n    body: JSON.stringify(event),\n  })\n  .catch(error => error)\n  .then(response => response.json());\n};\n\n\nconst getEntryFromDoctor = eventID => {\n\n  return fetch(`${dhis2.baseUrl}events/${eventID}`, {\n    method: 'GET',\n    credentials: 'include',\n    mode: 'cors',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n}\n\nconst getEvent = event => {\n\n  return fetch(`${dhis2.baseUrl}events?program=r6qGL4AmFV4`, {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n}\n\n\nexport default {\n  getReports,\n  getEvent,\n  postEvent,\n  getEntryFromDoctor,\n  dhis2,\n  headers,\n  getMe,\n  getInstanceAndEnrollment,\n  getTrackedEntityInstance\n};\n\n\n// -K\n"]},"metadata":{},"sourceType":"module"}