{"ast":null,"code":"// API CALLS\nvar enc = \"Basic \" + window.btoa(\"AkselJ\" + \":\" + \"District1-\");\nvar dhis2 = {\n  baseUrl: 'https://course.dhis2.org/dhis/api/29/'\n};\nvar headers = new Headers({\n  'Content-type': 'application/json',\n  Authorization: enc,\n  Accept: 'application/json'\n});\nvar headersForMe = new Headers({\n  // brukes for api/me, fordi Content-Type ikke funke for det\n  Authorization: enc,\n  Accept: 'application/json'\n});\n\nvar getTrackedEntityInstance = function getTrackedEntityInstance(orgUnit, username) {\n  return fetch(\"\".concat(dhis2.baseUrl, \"trackedEntityInstances?ou=\").concat(orgUnit, \"&program=r6qGL4AmFV4&?filter=enrollments.storedBy:eq:\").concat(username, \"&fields=*\"), {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar getMe = function getMe() {\n  var headers = headersForMe;\n  return fetch(\"\".concat(dhis2.baseUrl, \"me\"), {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar getInstanceAndEnrollment = function getInstanceAndEnrollment(hospital) {\n  // for random requests\n  return fetch(\"\".concat(dhis2.baseUrl, \"events?orgUnit=\").concat(hospital), {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar getSelectedData = function getSelectedData(spec) {\n  // for random requests\n  return fetch(\"\".concat(dhis2.baseUrl).concat(spec, \".json?ou=vwvDblM3MNX\"), {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar getTrackedEntityInstances = function getTrackedEntityInstances(orgUnit) {\n  return fetch(\"\".concat(dhis2.baseUrl, \"trackedEntityInstances.json?ou=\").concat(orgUnit, \"&\\n    ?filter=trackedEntityTypes:eq:nEenWmSyUEp\"), {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar getMetaData = function getMetaData() {\n  // for doctors, orgUnits\n  return fetch(\"\".concat(dhis2.baseUrl, \"programs/r6qGL4AmFV4/metadata.json\"), {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar getReports = function getReports() {\n  // pass orgUnit\n  console.log(\"Kjører\");\n  return fetch(\"\".concat(dhis2.baseUrl, \"events.json?program=r6qGL4AmFV4&paging=false\"), {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar enrollments = function enrollments(spec) {\n  // pass orgUnit\n  fetch(\"\".concat(dhis2.baseUrl).concat(spec, \".json?ou=u3rHGQGLLP7\"), {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar getAttributes = function getAttributes(id) {\n  return fetch(\"\".concat(dhis2.baseUrl, \"/trackedEntityAttributes/\").concat(id), {\n    // GET trackedEntityAttributes\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar getDataElement = function getDataElement(id) {\n  return fetch(\"\".concat(dhis2.baseUrl, \"dataElements/\").concat(id), {\n    //  Search for data element\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar postEvent = function postEvent(event) {\n  console.log(\"Event som blir sendt med i postEvent\", event);\n  return fetch(\"\".concat(dhis2.baseUrl, \"events/\"), {\n    method: 'POST',\n    credentials: 'include',\n    mode: 'cors',\n    headers: headers,\n    body: JSON.stringify(event)\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar getEntryFromDoctor = function getEntryFromDoctor(eventID) {\n  console.log(\"Kjører\");\n  console.log(\"Inn i getFromDoc\", eventID);\n  return fetch(\"\".concat(dhis2.baseUrl, \"events/\").concat(eventID), {\n    method: 'GET',\n    credentials: 'include',\n    mode: 'cors',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nvar getEvent = function getEvent(event) {\n  console.log(\"HALLO??\");\n  return fetch(\"\".concat(dhis2.baseUrl, \"events?program=r6qGL4AmFV4\"), {\n    //  Search for data element\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers: headers\n  }).catch(function (error) {\n    return error;\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nexport default {\n  getSelectedData: getSelectedData,\n  getDataElement: getDataElement,\n  getMetaData: getMetaData,\n  getReports: getReports,\n  getEvent: getEvent,\n  postEvent: postEvent,\n  getEntryFromDoctor: getEntryFromDoctor,\n  getTrackedEntityInstances: getTrackedEntityInstances,\n  dhis2: dhis2,\n  headers: headers,\n  getMe: getMe,\n  getInstanceAndEnrollment: getInstanceAndEnrollment,\n  getTrackedEntityInstance: getTrackedEntityInstance\n}; // -K","map":{"version":3,"sources":["/Users/walidhaidari/Documents/IN5320/DoctorDiary/HH-App/src/api.js"],"names":["enc","window","btoa","dhis2","baseUrl","headers","Headers","Authorization","Accept","headersForMe","getTrackedEntityInstance","orgUnit","username","fetch","method","mode","credentials","catch","error","then","response","json","getMe","getInstanceAndEnrollment","hospital","getSelectedData","spec","getTrackedEntityInstances","getMetaData","getReports","console","log","enrollments","getAttributes","id","getDataElement","postEvent","event","body","JSON","stringify","getEntryFromDoctor","eventID","getEvent"],"mappings":"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","sourcesContent":["// API CALLS\n\n\nvar enc = \"Basic \" + window.btoa(\"AkselJ\"+\":\"+\"District1-\");\n\nconst dhis2 = {\n  baseUrl: 'https://course.dhis2.org/dhis/api/29/',\n};\n\n\nconst headers = new Headers({\n  'Content-type' : 'application/json',\n  Authorization: enc,\n  Accept: 'application/json',\n});\n\nconst headersForMe = new Headers({  // brukes for api/me, fordi Content-Type ikke funke for det\n  Authorization: enc,\n  Accept: 'application/json',\n});\n\nconst getTrackedEntityInstance = (orgUnit, username) => {\n  return fetch(`${dhis2.baseUrl}trackedEntityInstances?ou=${orgUnit}&program=r6qGL4AmFV4&?filter=enrollments.storedBy:eq:${username}&fields=*`, {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n}\n\nconst getMe = () => {\n\n  var headers = headersForMe;\n\n  return fetch(`${dhis2.baseUrl}me`, {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n};\n\nconst getInstanceAndEnrollment = hospital => { // for random requests\n\n  return fetch(`${dhis2.baseUrl}events?orgUnit=${hospital}`, {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n};\n\n\nconst getSelectedData = spec => { // for random requests\n\n  return fetch(`${dhis2.baseUrl}${spec}.json?ou=vwvDblM3MNX`, {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n};\n\n\nconst getTrackedEntityInstances = orgUnit => {\n\n  return fetch(`${dhis2.baseUrl}trackedEntityInstances.json?ou=${orgUnit}&\n    ?filter=trackedEntityTypes:eq:nEenWmSyUEp`, {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n};\n\n\nconst getMetaData = () => { // for doctors, orgUnits\n\n  return fetch(`${dhis2.baseUrl}programs/r6qGL4AmFV4/metadata.json`, {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n};\n\n\nconst getReports = () => { // pass orgUnit\n\n  console.log(\"Kjører\");\n  return fetch(`${dhis2.baseUrl}events.json?program=r6qGL4AmFV4&paging=false`, {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n\n};\n\n\nconst enrollments = spec => { // pass orgUnit\n  fetch(`${dhis2.baseUrl}${spec}.json?ou=u3rHGQGLLP7`, {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n};\n\n\nconst getAttributes = id => {\n\n  return fetch(`${dhis2.baseUrl}/trackedEntityAttributes/${id}`, {  // GET trackedEntityAttributes\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n};\n\n\nconst getDataElement = id => {\n\n  return fetch(`${dhis2.baseUrl}dataElements/${id}`, {  //  Search for data element\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n}\n\nconst postEvent = event => {\n  console.log(\"Event som blir sendt med i postEvent\", event);\n  return fetch(`${dhis2.baseUrl}events/`, {\n    method: 'POST',\n    credentials: 'include',\n    mode: 'cors',\n    headers,\n    body: JSON.stringify(event),\n  })\n  .catch(error => error)\n  .then(response => response.json());\n};\n\nconst getEntryFromDoctor = eventID => {\n  console.log(\"Kjører\");\n  console.log(\"Inn i getFromDoc\", eventID);\n  return fetch(`${dhis2.baseUrl}events/${eventID}`, {\n    method: 'GET',\n    credentials: 'include',\n    mode: 'cors',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n}\n\nconst getEvent = event => {\n  console.log(\"HALLO??\");\n  return fetch(`${dhis2.baseUrl}events?program=r6qGL4AmFV4`, {  //  Search for data element\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n    headers,\n  })\n  .catch(error => error)\n  .then(response => response.json());\n}\n\n\nexport default {\n  getSelectedData,\n  getDataElement,\n  getMetaData,\n  getReports,\n  getEvent,\n  postEvent,\n  getEntryFromDoctor,\n  getTrackedEntityInstances,\n  dhis2,\n  headers,\n  getMe,\n  getInstanceAndEnrollment,\n  getTrackedEntityInstance\n};\n\n\n// -K\n"]},"metadata":{},"sourceType":"module"}